Всем привет!
Это видео - часть серии, в которой мы развиваем
микросервисовую социальную сети-аппликацию.
Мы используем React для наших фронтов и Node.js
для наших бэкэнд-сервисов.
Но вы можете также посмотреть это видео как стандалонное видео,
если вы интересовались автоматизацией
зависимости от нашего проекта.
Мы начнем с того, почему
автоматизация зависимости-манажмента
очень важна даже для маленьких проектов.
Мы потом перейдем к исследованию возможных
решений и мы будем имплементировать
один из них в нашем проекте.
Итак, вот агенда для сегодня.
Мы начнем с того, почему
мы нуждаемся в автоматизации зависимости-манажмента.
Мы потом поговорим о одной из возможных
решений, которая называется Renovate.
Мы ее сформулируем для всего проекта,
который будет заниматься 3 степени.
Первый - мы должны добавить
файл Renovate.json.
Мы потом поставим базовую брань
к новым зависимым упдатам, и я вернусь к этому
позже, чтобы объяснить, почему я
решила это делать.
А потом мы будем его сформулировать
для автомерзания.
Мы вернемся к этому позже,
когда мы начнем сформулировать.
Я объясню, что именно
автомерзание и как это может
нам помочь.
Потом мы проверим и сменим
некоторые из первых поисков
Renovate.
Итак, я вернулся к моей IDE,
и, как мы видим, уже есть
несколько зависимых, только
под зависимым ключом в нашем
файле package.json,
и только для авторизации
микросервиса.
Теперь, это только
производительные зависимости,
а также развитие зависимости,
и я верю, что если я добавлю
числа, они сейчас близки
к 30 зависимостях, которые
мы должны бы манировать
мануально, если мы хотели
их подвергнуть и не иметь
автоматической
зависимости-манажментной
решении.
Так как вы можете представить,
это действительно не скалево,
это очень трудно и затратно
сохранить все зависимости
до сих пор, и мы говорим только
о авторизации микросервиса.
Позже мы также добавим
веб-клиента, мы добавим
другие микросервисы, и чтобы
сохранить все эти зависимости
до сих пор, это просто
слишком много времени.
Мы просто не имеем этого времени,
даже если мы хотели быть большой
компанией, которая имеет много
ресурсов, это все еще
будет время, которое просто
не будет.
Это главная мотивация, почему
нам нужны автоматические зависимости.
Конечно, есть и другие
плюсы, например,
безопасные обновления
заплатятся намного быстрее, чем если
мы продолжали контролировать
пакеты за безопасными обновлениями.
Я довольно уверен, что
нет аргументов, которые
скажут, что мы не должны использовать
автоматическую зависимость-манажментную
решение.
Но, несмотря на то, что это главная
мотивация, почему нам нужно это
в нашем проекте, давайте продолжим
обсуждать, что именно
Renovate - одна из возможных
решений. Я могу
упомянуть и другие решения, которые
поддерживаются GitHub, но здесь я
решил идти с Renovate, и я
объясню вам, почему, позже
в этом видео. Я здесь
на сайте Renovate.
Это предоставлено Widesource, и
это бесплатно, так что мы можем
подключить его к нашей репозитории.
Мы можем также
подключить его бесплатно, если вы хотите
использовать инструмент Renovate CLI,
это может быть одна
приложение. Другой - если
вы хотите установить его на базе, но
для нас здесь мы используем
GitHub-аппу, и эта
GitHub-аппа будет
следовать за контролем нашей
репозиции GitHub и создавать
пул-рекламки, когда будут
обновления к любому из наших
репозиционеров.
Как мы установим эту
аппу? Давайте
зайдем в GitHub, но прежде,
я хочу сказать вам одну
возможную опцию для Renovate.
Это Dependabot, и это
другой инструмент
для автоматизации управления
зависимости. Если вы не хотите
использовать Renovate, возможно,
по личным причинам, или потому что
вы уже использовали Dependabot где-то
и вы были комфортнее с ним,
но вы не могли использовать
новую версию Dependabot, которая
национально поддержана
GitHub, и проблема в том, что
она не поддерживает автомерзание.
Это что-то, что может быть
действительно отвратительным. Представьте,
что у нас, ну, 5 микросервисов,
и возможно в будущем каждый микросервис
будет с листом 60 зависимостей,
может быть 50-60 зависимостей,
и, ну, у нас просто
огромная листа PR,
которые должны быть
включены в один раз.
Для меня это не задача.
Мы можем симулировать
автомерзающий отдельный действие
с другими действиями GitHub, но тогда нам нужно
добавить больше конфигураций, чем
действительно необходимо
в нашем репозитории.
Ну, я не очень
рад этим решениям.
Может, они будут
включать эту конфигурацию позже,
и мы сможем перейти к Dependabot.
Если вы хотите использовать старую
версию Dependabot, это также возможно.
Вы можете
использовать версию 1,
и там они поддерживают
автомерзающую функциональность,
но они уже сильно
двигаются наиболее нативно
к GitHub.
Это главная причина,
почему я решил идти с Renovate.
Если позже, если в будущем
это изменится,
то, может, мы также можем
перейти к Dependabot.
Я люблю факт, что Dependabot
имеет прощестию конфигурации.
Если мы посмотрим на Renovate,
давайте я просто перемещу кнопки,
то здесь есть много возможностей
для конфигурации.
И хотя это хорошо, и это
подходит нам, или это подходит
практически каждому случаю,
который мы можем представить.
Как вы можете представить, это может быть
немного оборудовательным в начале.
Так что
всегда есть этот трейд-офф
между простой и
удобной конфигурацией.
В нашем случае
мы используем несколько конфигураций,
которые предоставлены,
конфигурационные опции, которые предоставлены
Renovate. Мы не будем
много разобрать,
не будем слишком детально,
но, ну, я бы предпочитал,
если конфигурация была
немного проще работать с ней.
Вот почему я бы
хотел идти с Dependabot,
но у меня нет
автоматических зависимостей,
или нет автомерза,
то это действительно
главная причина,
почему мне не использовать его.
Я здесь, на моем странице,
и теперь я хочу показать вам,
как вы можете установить
или проверить установку
Wide Source Renovate в вашем проекте.
Если мы здесь, на этой странице,
вы можете просто нажать "Установить бесплатно".
Это будет привести вас
к вашему проекту, но потом,
если вы хотите проверить установку
или правильно ее конфигурировать,
вы должны пройти к вашей странице "Установки".
И здесь,
вверху, мы имеем "Аппликации".
Итак, когда мы нажимаем на "Аппликации" здесь,
мы увидим, что есть
список аппликаций. У меня есть два других
установлены, но здесь есть
"Реновать" аппликация. И когда я
нажму на "Конфигурация",
тогда у меня будет список,
или у меня будет
список, связанных с
"Реновать" аппликацией.
Так что есть возможность
копировать и пастить
базовую
конфигурацию. Мы должны
поменять несколько вещей здесь, потому что
это ангулярно,
так что это не очень
важно для наших
целей здесь.
И если я
еще поднимусь сюда,
мы увидим, что у нас есть
"Пермиссии". Может быть,
у вас нет этого, потому что вы уже
установили "Реновать"
и уже дали
новую версию "Пермиссий". Я могу
сделать это позже, это не проблема.
И здесь, в
выбранных репозиториях, я могу
выбрать репозиторию, которую я хочу
дать доступ. У меня есть несколько
других репозиторий здесь, но
это просто маленькие личные проекты,
не интересные для этого видео.
Главное, что я выбираю "Аппликация на соцсетях",
и я могу нажать "Совет".
Позже, после советования новой конфигурации
"Реновать" и добавления
в репозиторию, у нас есть "Пермиссия", которую
нужно скачать, чтобы активировать "Реновать".
Если вы хотите пройти
через текст "Пермиссии",
то не волнуйтесь, он описывает
точно, как "Реновать" будет работать
в репозитории. Мы просто
пройдем через это и скачем
"Пермиссию", и тогда мы начнем
работать с конфигурацией "Реновать"
более близко. Так что я скачал
"Пермиссию", и давайте вернемся к
терминалу, и давайте скачем
новую версию "Мастера" и
затем подключим конфигурацию
"Реновать". Я снова на моем терминале,
давайте скачем новую версию
"Мастера", и мы создадим
новую "По-рекламе" или новую
"Бранч". Так что давайте проверим,
здесь это будет
"Реновать", назовем это так,
и я могу уже подключить это,
чтобы установить "Бранч" на верхнем уровне,
вот так.
И мы сейчас пойдем к IDE,
и мы продолжим работать с конфигурацией.
Как вы можете видеть, здесь
есть 5 линий кодов,
и он просто говорит "Доставлять
базовую конфигурацию".
Так что что это значит,
эта конфигурация "Колонна базы"?
Какие опции здесь
выключены или выключены?
Ну, если мы просто гуглим это,
мы можем зайти на эту страницу, и это
дает нам более детальную
список, как опции
выполнены
в базовой конфигурации.
Для нас здесь важно, например,
что "Ауто-мерч" выключен,
так что это что-то, что мы хотим
изменить, правильно? Но давайте
вернемся к репозиторию,
и давайте посмотрим,
есть ли уже некоторые открытые
"По-рекламы" из "Реновать".
Аккуратно. Так что уже есть
один "По-реклама", и это первое,
что "Реновать" любит делать.
Вместо того, чтобы
эти версии позволили
создать множество версий,
пока большая версия
все еще не будет сытна,
то что "Реновать" делает,
это, что она действительно
"пинит" зависимости.
Что это значит, "пинит" зависимость?
Это значит, что мы всегда
работаем с 8.1.1.
Это никогда не будет так,
что у нас будет
"карат", я думаю,
это имя этого персонажа.
И потом 8.1.1, и в нашем компьютере
мы имеем версию, скажем,
8.1.3, но в области CI,
потому что мы проводим тесты
немного позже,
она работает с 8.2.0,
и это изменение,
что происходит,
что она не работает в CI,
но работает в нашей машине,
и из-за этого нам нужно
подавить зависимость в нашей машине,
и это может быть трудно дебагировать.
Так что "пинять" зависимости
никогда не очень плохо,
так как у нас есть
автоматический инструмент управления зависимостью.
Если у нас нет автоматического инструмента управления зависимостью,
то это может быть немного
трудно, чтобы
мануально подавить каждый
синий номер здесь, потому что они "пинят",
но потому что у нас есть "реновэйт"
который занимается этим, мы можем просто
"пинять" эти зависимости.
Это также будет убедить, что
с сей день до сих пор, каждый раз,
когда вы вставляете свой репозитор,
и вы вставляете "npm install",
это будет вставлять
все зависимости, с которыми я работаю.
Так что я думаю, что это очень, очень
позитивно для нас,
потому что это освещает то, что мы работаем
с точно такими же пакетами.
Так что это точно то, что мы хотим
в этом проекте.
Я просто зайду сюда, "проверю"
"проверить", "проверить".
Отлично, теперь нам нужно
снова "пуллировать" "мастер",
"пуллировать" "мастер".
И, как вы видите, "депендабот"
уже начинает
правильно идентифицировать
зависимости нашей "auth" директории.
Мы не добавили никакого "path"
или ничего, чтобы...
Опс, я думаю, что
я сказал "депендабот", но я имею в виду "реновэйт".
Простите, я просто перемешиваю вещи.
Так что, как вы видите,
нам не нужно добавлять никакого "path"
в наш "renovate.json" файл.
Это достаточно умно, чтобы
мы могли добавлять "path" в "auth" директории.
Правильно?
Если мы хотим
исключить директорию в будущем,
то есть есть возможность
исключить определенную директорию
из "renovate.scanning".
Но на данный момент
нам не нужно беспокоиться о том.
Итак, вернемся к моему термину.
Проверим "master" бранч,
"пуллировать"
и затем "перемещать"
в наш "lm/renovate".
Итак, я вернулся к моему "IDE".
И одна вещь, которую я заметил,
это то, что "renovate"
пинует только "dev" зависимости.
Правильно?
Так что, он не пинует зависимости самим.
И это происходит,
потому что вот так работает
"renovate.automatic"
стратегия, когда она
подавляет зависимость.
Если я перейду к документации,
мы увидим, что "renovate.auto"
стратегия работает так,
что, возможно, будет
другой пакет, который будет работать по-другому.
Так что, он всегда пинует
"dev" зависимости, и он пинует
зависимости, если они детектируют, что это
апп и не лаборатория.
В нашем случае это действительно
апп, но он не детектирует, что
это апп. Так что мы вернемся сюда,
к файлу конфигурации,
и мы определим
точно стратегию
для этой стратегии "range".
Итак, мы добавим
это, и мы
скажем "pin" вместо
статей "default".
Мы используем этот "pin"
здесь.
Пропустим это, вернемся к IDE
и добавим это к нашему
файлу конфигурации.
Здесь, в файле "renovate.json"
я могу добавить ключ,
и мы скажем
"pin" здесь.
Если я не имею
правильную статью,
то это означает, что
цена должна быть 1 в "auto", "pin",
"bump" и так далее.
Это означает, что мы добавляем
стратегию "range"
на правильном уровне.
Я это сохраню, и вернемся
обратно к файлу конфигурации,
запустим этот бранч,
и затем смещаем это в "master" и посмотрим,
если "renovate" создает
"pr" для пина
зависимости на нашем аппликации.
Возвращаемся к файлу конфигурации,
"everything" и запишем
"update renovate
config"
и, когда все тесты
прошли, и изменения были совершены,
я просто запущу это в
ремонтную запись.
Теперь, обратно в ремонтную запись,
я просто создаю пул-рекламу
"lm/renovate".
Должен быть в состоянии сменения,
нет изменений.
Я создаю пул-рекламу, и автоматически сменю это.
Я просто подожду, пока тесты
прошли, тесты должны начать
работать здесь скоро.
Когда
проверки зеленые,
я просто смещаю это в "master".
Отлично.
Смещаем это, и затем
запущем новую версию "master"
и смещаем ее обратно в "lm/renovate",
потому что мы все еще будем
работать на конфигурацию.
Возвращаемся к моему термину,
я просто снова выключаю вывод,
проверяю "master", запущу,
и, как вы видите, у нас уже есть
несколько новых бранчей
из "renovate",
так что давайте проверим
"lm/renovate" бранч,
смещаем "master".
На самом деле, мы могли бы сделать
ребейс, но, ну, все нормально.
И затем мы запускаем это в "remote".
Перед тем, как вернуться и проверить
пульсы "renovate",
мы хотим закончить
конфигурацию файла "renovate.json".
Так что, кроме того, что мы имеем
пин для стратегии ранжа,
мы также хотим изменить базовый бранч
для пульсов из "renovate",
и мы хотим
выключить "auto-merge"
когда у нас есть "minor" или "patch" обновление.
Окей, так что давайте это сделаем.
Здесь я могу просто сказать "base_branch",
так что "base_branches" будет
арея, и чтобы убедиться, что
мы это правильно выполняем,
давайте вернемся к документации,
и посмотрим, как они описывают
пример базовых бранчей.
Так что базовые бранчи - это
арея, потому что, может быть,
у нас есть множество стримов с выпуском,
так что они говорят,
что если у нас больше, чем
один выпускный бранч,
и мы хотим оставить их все до сих пор,
то мы можем просто добавить
больше, чем один бранч к
этих базовых бранчах. В нашем случае у нас
только один бранч, который мы хотим.
Вернемся обратно к файлу "notion",
который является бранчом "dependency_updates".
Так что я это запишу,
и обратно к моему IDE
я просто добавлю это
к арее, так что,
это будет занимать
базовые бранчи, конфигурацию, и
давайте занимаемся конфигурацией "auto_merge".
Я вернулся к конфигурации
"options" для "renovate",
и это точно то, что мы хотим.
Они уже упомянули это,
вы можете конфигурировать "renovate"
для "auto_merge" все, но в этом случае
мы можем сделать это вот так,
что означает, что оно автоматически
смещает минусовые упдаты,
патч-упдаты, пин-упдаты и
дигест-упдаты, и это
примерно то, что мы хотим, потому что
мы хотим уменьшить расход работы
управления нашими зависимостями.
Так что я просто запишу это
здесь, и обратно к моему IDE
я добавлю это здесь.
Просто нужно удалить это,
и это. И это точно то,
что мы хотим. Так что я это запишу,
и для нашей конфигурации
мы сделаем эти изменения
и смещаем их в "master", и потом
мы увидим, что будет случиться
с патчами "renovate".
Возвратно к моему термину,
я открою выключение еще раз,
и проверю, что мы изменили файл,
так что я добавлю это
"core_update_renovate_config",
и может быть,
этот "single" не будет работать,
так что я просто
делаю так, подождем, пока
тест будет проходить, это должно быть
довольно быстро, и потом я могу
запустить изменения в репозиторию,
в ремонтную репозиторию, и потом
открыть патч сюда.
Возвратно к моим пул-реквестам,
я зажму здесь "new_pull_request"
и "from lm/renovate".
Потом я могу проверить,
есть ли какие-то значимые изменения,
и я создаю пул-реквест здесь,
и я скажу "core_update_renovate_config".
Как вы можете видеть,
прямо после того, как мы сформировали патч,
Renovate автоматически закрыл
и открыл патч, потому что мы
изменили некоторые конфигурации
о базовом бранче,
и о том, как он будет управлять
автоматическим сформированием.
Renovate уже
занимается автоматическим
обновлением
и открывает патчи,
когда новая конфигурация будет замерзша.
На данный момент у нас нет открытых патчей,
потому что Renovate процессирует новую конфигурацию,
но скоро мы начнем видеть
некоторые из них здесь,
и мы можем вернуться и проверить,
что именно они говорят.
После того, как я подождал
довольно много подробностей,
и не получал ничего от Renovate,
я задумался, что происходит.
И, как оказалось,
если мы держим этот "extend"
здесь,
этот "extend.config.base",
то будет конфликт в конфигурации,
и не очень понятно,
что эти новые конфигурации
обрабатывают
обрабатывающие конфигурации,
или если обрабатывающие конфигурации
обрабатывают конфигурации, которые мы написали здесь.
Я удалил этот "extend"
от файла,
и, как и так, мы начали видеть
новые патчи от Renovate.
Давайте вернемся к GitHub
и смешим некоторые из них.
Первое - это подключить
или подключить зависимости
в нашей ареи зависимости,
то есть не зависимости дев,
а зависимости производства.
И это то, что, как я уже сказал,
мы хотим сделать,
особенно, или даже больше,
потому что я снимаю видео,
чтобы я мог убедить себя,
что у вас есть точно такие же зависимости,
как у меня.
Если вы в других сценариях,
вы не были в stanie
создать семантическую версию
зависимости, то, по всему мнению,
продолжайте эту конфигурацию,
это не проблема.
Но здесь, я думаю,
вам будет намного легче
следить за тем,
если у нас есть
точно такие же зависимости.
Еще один комментарий -
вы можете видеть, что теперь базовая патч
- это патч "депенденции-упдейты".
Я приступаю сюда
и выбираю
"депенденции-упдейты",
вот так.
И потом я увидю, что,
окей, я поменял
некоторые файлы здесь,
и я смешаю это в "Мастер",
чтобы "Мастер" был в порядке
с новой версией.
Вот так.
Создаю "по-рекламе".
И здесь я буду
смешивать эти вопросы.
Честно говоря, я мог бы ждать тестов,
но потому что это просто
простые "депенденции"
или простые "действия управления",
я уверен, что моя аппликация
останется без изменений,
поэтому все тесты будут пасты.
Конечно, в производительном обществе
бранч будет защищен,
и, на самом деле, он должен быть защищен,
но я отключил защиту для этого видео,
чтобы мы могли немного быстрее
проверить, что это не длится слишком долго,
пока все проверки и
все индивидуальные подробности
и "по-рекламе" были созданы и подробно подробно.
Так что я решил, что, окей,
для этого видео я отключил
защиту в "Мастер-бранче",
а потом я буду
активировать ее снова.
Так что, небольшой комментарий,
прежде чем мы закончим видео.
Как вы видите, уже 14 открытых
"по-рекламе" запросов,
что означает, что у нас уже много
запросов, и мы начинаем увидеть
настоящую силу или
как полезна автоматическая
зависимость управления.
Это все на сегодня.
Если вы хотите быть информированы каждый раз, когда
новый видео выйдет,
обязательно подписывайтесь на канал,
просто кликните, и вы получите небольшую
уведомление каждый раз, когда я
выкладываю новое видео. Также, если вы
интересованы темой,
напишите ее в комментариях,
это очень важно для меня,
чтобы вы получили информацию о будущем серии в канале.
И наконец, как вы знаете,
деление знаний - это основная мотивация
за этим каналом. Так что, если вы знаете
кого-то, кто мог бы из этих видео получить бонус,
обязательно делитесь им с друзьями.
Спасибо за ваше время, и увидимся в следующем видео.
Пока-пока!
